---
- name: Wait for API to return 200
  uri:
    url: "{{schema_registry_http_protocol}}://{{ansible_host}}:{{schema_registry_listener_port}}/subjects"
    status_code: 200
    validate_certs: false
  register: result
  until: result.status == 200
  retries: 60
  delay: 5
  when: not rbac_enabled|bool and not schema_registry_ssl_mutual_auth_enabled|bool

- name: Wait for API to return 200 - mTLS
  uri:
    url: "{{schema_registry_http_protocol}}://{{inventory_hostname}}:{{schema_registry_listener_port}}/subjects"
    status_code: 200
    validate_certs: false
    client_cert: "{{schema_registry_cert_path}}"
    client_key: "{{schema_registry_key_path}}"
  register: result
  until: result.status == 200
  retries: 60
  delay: 5
  when: not rbac_enabled|bool and schema_registry_ssl_mutual_auth_enabled|bool

- name: Wait for API to return 200 - RBAC
  uri:
    url: "{{schema_registry_http_protocol}}://{{ansible_host}}:{{schema_registry_listener_port}}/subjects"
    status_code: 200
    validate_certs: false
    url_username: "{{schema_registry_ldap_user}}"
    url_password: "{{schema_registry_ldap_password}}"
    force_basic_auth: true
  register: result
  until: result.status == 200
  retries: 60
  delay: 5
  when: rbac_enabled|bool and not schema_registry_ssl_mutual_auth_enabled|bool

- name: Wait for API to return 200 - RBAC - mTLS
  uri:
    url: "{{schema_registry_http_protocol}}://{{inventory_hostname}}:{{schema_registry_listener_port}}/subjects"
    status_code: 200
    validate_certs: false
    client_cert: "{{schema_registry_cert_path}}"
    client_key: "{{schema_registry_key_path}}"
    url_username: "{{schema_registry_ldap_user}}"
    url_password: "{{schema_registry_ldap_password}}"
    force_basic_auth: true
  register: result
  until: result.status == 200
  retries: 60
  delay: 5
  when: rbac_enabled|bool and schema_registry_ssl_mutual_auth_enabled|bool
