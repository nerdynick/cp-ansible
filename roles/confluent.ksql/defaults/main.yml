---
ksql_streams_state_dir: /var/lib/kafka-streams

ksql_custom_log4j: "{{ custom_log4j }}"

ksql_java_args:
  - "{% if kafka_broker_listeners[ksql_kafka_listener_name]['sasl_protocol'] | normalize_sasl_protocol == 'GSSAPI' %}-Djava.security.auth.login.config={{ksql.jaas_file}}{% endif %}"
  - "{% if ksql_jolokia_enabled|bool %}-javaagent:{{jolokia_jar_path}}=port={{ksql_jolokia_port}},host=0.0.0.0{% if ksql_jolokia_ssl_enabled|bool %},keystore={{ksql_keystore_path}},keystorePassword={{ksql_keystore_storepass}},protocol=https{% endif %}{% endif %}"
  - "{% if ksql_custom_log4j|bool %}-Dlog4j.configuration=file:{{ksql.log4j_file}}{% endif %}"
  - "{% if ksql_jmxexporter_enabled|bool %}-javaagent:{{jmxexporter_jar_path}}={{ksql_jmxexporter_port}}:{{ksql_jmxexporter_config_path}}{% endif %}"

ksql_custom_java_args: ""
ksql_final_java_args: "{{ ksql_java_args + [ ksql_custom_java_args ] }}"

ksql_rocksdb_path: /tmp/ksqldb

# Empty values will not be written into override.conf
ksql_service_overrides:
  LimitNOFILE: 100000
  User: "{{ ksql_user if ksql_user != ksql_default_user else '' }}"
  Group: "{{ ksql_group if ksql_group != ksql_default_group else '' }}"
ksql_service_environment_overrides:
  KSQL_HEAP_OPTS: "-Xmx3g"
  KSQL_OPTS: "{{ ksql_final_java_args | java_arg_build_out }}"
  ROCKSDB_SHAREDLIB_DIR: "{{ksql_rocksdb_path}}"

ksql_default_internal_replication_factor: "{{ [ groups['kafka_broker'] | length, 3 ] | min }}"

ksql_service_id: default_


ksql_confluent_metrics_enabled: true
ksql_confluent_metrics_servers: "{{groups['kafka_broker']}}"
ksql_confluent_metrics_listener: "{{kafka_broker_listeners[ksql_kafka_listener_name]}}"
ksql_confluent_metrics_bootstrap_servers: "{% for host in ksql_confluent_metrics_servers %}{% if loop.index > 1%},{% endif %}{{ hostvars[host]['ansible_host']|default(host) }}:{{ksql_confluent_metrics_listener.port}}{% endfor %}"

ksql_metric_consumer_interceptors: []
ksql_metric_consumer_interceptors_final: "{{ksql_metric_consumer_interceptors + [ksql_confluent_metrics_consumer_interceptor_cls] if ksql_confluent_metrics_enabled|bool else ksql_metric_consumer_interceptors}}"
ksql_metric_producer_interceptors: []
ksql_metric_producer_interceptors_final: "{{ksql_metric_producer_interceptors + [ksql_confluent_metrics_producer_interceptor_cls] if ksql_confluent_metrics_enabled|bool else ksql_metric_producer_interceptors}}"


ksql:
  appender_log_path: /var/log/confluent/ksql/
  appender_log_name: ksql.log
  appender_max_log_files: 10
  appender_log_file_size: 100MB
  streams_appender_log_name: ksql-streams.log
  streams_appender_max_log_files: 10
  streams_appender_log_file_size: 100MB
  kafka_appender_log_name: ksql-kafka.log
  kafka_appender_max_log_files: 10
  kafka_appender_log_file_size: 100MB
  streamsDataDir: "{{ksql_streams_state_dir}}"
  properties:
    application.id: ksql-server
    ksql.service.id: "{{ ksql_service_id }}"
    ksql.internal.topic.replicas: "{{ ksql_default_internal_replication_factor }}"
    ksql.streams.replication.factor: "{{ ksql_default_internal_replication_factor }}"
    ksql.streams.state.dir: "{{ksql_streams_state_dir}}"
    ksql.streams.num.standby.replicas: 1
    ksql.streams.producer.delivery.timeout.ms: 2147483647
    ksql.streams.producer.max.block.ms: 9223372036854775807
